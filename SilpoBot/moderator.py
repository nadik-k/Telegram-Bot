from telebot import types
import db_handler

titles_vac = ["–ù–∞–∑–≤–∞", "–ó–∞—Ä–ø–ª–∞—Ç–∞", "–ó–∞–π–Ω—è—Ç—ñ—Å—Ç—å", "–î–æ—Å–≤—ñ–¥", "–û–±–æ–≤'—è–∑–∫–∏"]
user_data = {}
titles = ["–Ü–º'—è", "–ü—Ä—ñ–∑–≤–∏—â–µ", "–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è(dd.mm.yyyy)", "–ê–¥—Ä–µ—Å–∞", "–ü–æ—à—Ç–∞"]

def admin(message, bot):
    bot.send_message(message.chat.id, f"–í—ñ—Ç–∞—é, {message.contact.first_name}! :)", reply_markup=types.ReplyKeyboardRemove())
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    btn1 = types.KeyboardButton('–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç—ñ–≤')
    btn2 = types.KeyboardButton('–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –≤–∞–∫–∞–Ω—Å—ñ—ó')
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—É –∫–æ–º–∞–Ω–¥—É –∑—ñ —Å–ø–∏—Å–∫—É:", reply_markup=markup)

def look_candidates(message, bot):
    candidates = db_handler.read_candidates()
    if candidates:
        profiles_jobs = {}
        for candidate in candidates:
            profile_id = candidate['profile_id']
            job_id = candidate['job_id']
            if profile_id not in profiles_jobs:
                profiles_jobs[profile_id] = []
            profiles_jobs[profile_id].append(db_handler.read_vacancy(job_id)['name'])

        for profile_id, job_ids in profiles_jobs.items():
            jobs_text = ', '.join(map(str, job_ids))
            profile = db_handler.read_profile(profile_id)
            message_text = (f"–ü—Ä–æ—Ñ—ñ–ª—å\n"
                            f"–Ü–º'—è: {profile['first_name']}\n"
                            f"–ü—Ä—ñ–∑–≤–∏—â–µ: {profile['last_name']}\n"
                            f"–î–∞—Ç–∞ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è: {profile['date']}\n"
                            f"–¢–µ–ª–µ—Ñ–æ–Ω: {profile['phone']}\n"
                            f"–ê–¥—Ä–µ—Å–∞: {profile['address']}\n"
                            f"–ü–æ—à—Ç–∞: {profile['email']}\n\n"
                            f"–í–∞–∫–∞–Ω—Å—ñ—ó: {jobs_text}")
            bot.send_message(message.chat.id, message_text, reply_markup=get_delete_markup(profile_id))
    else:
        bot.send_message(message.chat.id, "–ö–∞–Ω–¥–∏–¥–∞—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

def get_delete_markup(profile_id):
    markup = types.InlineKeyboardMarkup()
    delete_button = types.InlineKeyboardButton(text="–í–∏–¥–∞–ª–∏—Ç–∏", callback_data=f"delete_{profile_id}")
    markup.add(delete_button)
    return markup

def edit_vacancies(message, bot):
    vacancies = db_handler.fetch_data()
    if vacancies:
        for vacancy in vacancies:
            name = vacancy['name']
            price = vacancy['price']
            employment = vacancy['employment']
            experience = vacancy['experience']
            requirements = vacancy['requirements']
            message_text = (
                f"üìù _–ù–∞–∑–≤–∞_: *{name}*\n\n"
                f"üí∞ _–ó–∞—Ä–ø–ª–∞—Ç–∞_: *{price}*\n\n"
                f"üïí _–ó–∞–π–Ω—è—Ç—ñ—Å—Ç—å_: *{employment}*\n\n"
                f"üìà _–î–æ—Å–≤—ñ–¥_: *{experience}*\n\n"
                f"üìã _–û–±–æ–≤'—è–∑–∫–∏_: *{requirements}*"
            )
            reply_markup = types.InlineKeyboardMarkup()
            reply_markup.row(types.InlineKeyboardButton(text='–†–µ–¥–∞–≥—É–≤–∞—Ç–∏', callback_data=f'edit_{vacancy["id"]}'))
            reply_markup.row(types.InlineKeyboardButton(text='–í–∏–¥–∞–ª–∏—Ç–∏', callback_data=f'deleteV_{vacancy["id"]}'))
            keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
            button1 = types.KeyboardButton(text="–°—Ç–≤–æ—Ä–∏—Ç–∏ –≤–∞–∫–∞–Ω—Å—ñ—é")
            button2 = types.KeyboardButton(text="–ù–∞–∑–∞–¥")
            keyboard.add(button1, button2)
            bot.send_message(
                message.chat.id,
                text=message_text,
                parse_mode='Markdown',
                reply_markup=reply_markup
            )
    else:
        bot.send_message(message.chat.id, "–ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –≤–∞–∫–∞–Ω—Å—ñ–π.")
    bot.send_message(message.chat.id, "–ê–±–æ —Å—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤—É.", reply_markup=keyboard)

def edit_vac(vacancy_id, bot, message):
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    btn1 = types.KeyboardButton('–ù–∞–∑–≤–∞')
    btn2 = types.KeyboardButton('–ó–∞—Ä–ø–ª–∞—Ç–∞')
    btn3 = types.KeyboardButton('–ó–∞–π–Ω—è—Ç—ñ—Å—Ç—å')
    btn4 = types.KeyboardButton('–î–æ—Å–≤—ñ–¥')
    btn5 = types.KeyboardButton("–û–±–æ–≤'—è–∑–∫–∏")
    btn6 = types.KeyboardButton("–ù–∞–∑–∞–¥")
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
    msg = bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å —â–æ –∑–º—ñ–Ω–∏—Ç–∏:", reply_markup=markup)
    bot.register_next_step_handler(msg, process_edit_choice, vacancy_id, bot)

def process_edit_choice(message, vacancy_id, bot):
    if message.text == '–ù–∞–∑–≤–∞':
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤—É –Ω–∞–∑–≤—É:")
        bot.register_next_step_handler(msg, edit_name, vacancy_id, bot)
    elif message.text == '–ó–∞—Ä–ø–ª–∞—Ç–∞':
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤—É –∑–∞—Ä–ø–ª–∞—Ç—É:")
        bot.register_next_step_handler(msg, edit_price, vacancy_id, bot)
    elif message.text == '–ó–∞–π–Ω—è—Ç—ñ—Å—Ç—å':
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤—É –∑–∞–π–Ω—è—Ç—ñ—Å—Ç—å:")
        bot.register_next_step_handler(msg, edit_employment, vacancy_id, bot)
    elif message.text == '–î–æ—Å–≤—ñ–¥':
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π –¥–æ—Å–≤—ñ–¥:")
        bot.register_next_step_handler(msg, edit_experience, vacancy_id, bot)
    elif message.text == "–û–±–æ–≤'—è–∑–∫–∏":
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤—ñ –æ–±–æ–≤'—è–∑–∫–∏:")
        bot.register_next_step_handler(msg, edit_responsibilities, vacancy_id, bot)
    elif message.text == "–ù–∞–∑–∞–¥":
        edit_vacancies(message, bot)
    else:
        bot.send_message(message.chat.id, "–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
        edit_vac(vacancy_id, message)

def edit_name(message, vacancy_id, bot):
    try:
        db_handler.edit_vacancy(vacancy_id, "name", message.text)
        bot.send_message(message.chat.id, "–ù–∞–∑–≤—É –∑–º—ñ–Ω–µ–Ω–æ.")
        edit_vacancies(message, bot)
    except Exception as e:
        print(f"Error editing vacancy: {e}")
        bot.send_message(message.chat.id, "–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –Ω–∞–∑–≤–∏.")

def edit_price(message, vacancy_id, bot):
    try:
        db_handler.edit_vacancy(vacancy_id, "price", message.text)
        bot.send_message(message.chat.id, "–ó–∞—Ä–ø–ª–∞—Ç—É –∑–º—ñ–Ω–µ–Ω–æ.")
        edit_vacancies(message, bot)
    except Exception as e:
        print(f"Error editing vacancy: {e}")
        bot.send_message(message.chat.id, "–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –∑–∞—Ä–ø–ª–∞—Ç–∏.")

def edit_employment(message, vacancy_id, bot):
    try:
        db_handler.edit_vacancy(vacancy_id, "employment", message.text)
        bot.send_message(message.chat.id, "–ó–∞–π–Ω—è—Ç—ñ—Å—Ç—å –∑–º—ñ–Ω–µ–Ω–æ.")
        edit_vacancies(message, bot)
    except Exception as e:
        print(f"Error editing vacancy: {e}")
        bot.send_message(message.chat.id, "–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –∑–∞–π–Ω—è—Ç–æ—Å—Ç—ñ.")

def edit_experience(message, vacancy_id, bot):
    try:
        db_handler.edit_vacancy(vacancy_id, "experience", message.text)
        bot.send_message(message.chat.id, "–î–æ—Å–≤—ñ–¥ –∑–º—ñ–Ω–µ–Ω–æ.")
        edit_vacancies(message, bot)
    except Exception as e:
        print(f"Error editing vacancy: {e}")
        bot.send_message(message.chat.id, "–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –¥–æ—Å–≤—ñ–¥—É.")

def edit_responsibilities(message, vacancy_id, bot):
    try:
        db_handler.edit_vacancy(vacancy_id, "requirements", message.text)
        bot.send_message(message.chat.id, "–û–±–æ–≤'—è–∑–∫–∏ –∑–º—ñ–Ω–µ–Ω–æ.")
        edit_vacancies(message, bot)
    except Exception as e:
        print(f"Error editing vacancy: {e}")
        bot.send_message(message.chat.id, "–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –æ–±–æ–≤'—è–∑–∫—ñ–≤.")
def handle_cvacancy(message, bot):
    global current_title_index
    current_title_index[message.chat.id] = 0
    bot.send_message(message.chat.id, f"{titles_vac[current_title_index[message.chat.id]]}:")
    bot.register_next_step_handler(message, handle_vacancy_input, bot)


def handle_vacancy_input(message, bot):
    global current_title_index
    idx = current_title_index.get(message.chat.id, 0)
    if message.chat.username not in user_data:
        user_data[message.chat.username] = {}
    user_data[message.chat.username][titles_vac[idx]] = message.text
    bot.send_message(message.chat.id, f"–í–∏ –≤–≤–µ–ª–∏: {message.text}")
    idx += 1
    if idx < len(titles):
        current_title_index[message.chat.id] = idx
        bot.send_message(message.chat.id, f"{titles_vac[idx]}:")
        bot.register_next_step_handler(message, handle_vacancy_input, bot)
    else:
        bot.send_message(message.chat.id, "–í—Å—ñ –¥–∞–Ω—ñ –≤–≤–µ–¥–µ–Ω–æ. –î—è–∫—É—é!")
        cursor = db_handler.conn.cursor()
        add_message = (
            "INSERT INTO `vacancies` (`name`, `price`, `employment`, `experience`, `requirements`) "
            "VALUES (%s, %s, %s, %s, %s)"
        )
        data_message = (
            user_data[message.chat.username]["–ù–∞–∑–≤–∞"],
            user_data[message.chat.username]["–ó–∞—Ä–ø–ª–∞—Ç–∞"],
            user_data[message.chat.username]["–ó–∞–π–Ω—è—Ç—ñ—Å—Ç—å"],
            user_data[message.chat.username]["–î–æ—Å–≤—ñ–¥"],
            user_data[message.chat.username]["–û–±–æ–≤'—è–∑–∫–∏"]
        )
        cursor.execute(add_message, data_message)
        db_handler.conn.commit()
        cursor.close()
        current_title_index.pop(message.chat.id, None)
        user_data.pop(message.chat.username, None)
        edit_vacancies(message, bot)

def back(message, bot):
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    btn1 = types.KeyboardButton('–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç—ñ–≤')
    btn2 = types.KeyboardButton('–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –≤–∞–∫–∞–Ω—Å—ñ—ó')
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—É –∫–æ–º–∞–Ω–¥—É –∑—ñ —Å–ø–∏—Å–∫—É:", reply_markup=markup)